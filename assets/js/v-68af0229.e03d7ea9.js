"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[906],{1981:(e,a,s)=>{s.r(a),s.d(a,{data:()=>n});const n={key:"v-68af0229",path:"/Other/%E5%9C%A8linux%E4%B8%AD%E6%8C%81%E7%BB%AD%E8%BF%90%E8%A1%8CNode.js%E6%96%87%E4%BB%B6.html",title:"在linux中持续运行Node.js文件",lang:"zh-CN",frontmatter:{date:"2021/12/14",categories:["服务端"],tag:["Node","持续运行"]},excerpt:"",headers:[{level:2,title:"为什么要持续运行：",slug:"为什么要持续运行",children:[]},{level:2,title:"步骤：",slug:"步骤",children:[]}],filePathRelative:"Other/在linux中持续运行Node.js文件.md",git:{updatedTime:1639445629e3,contributors:[{name:"luck_baby",email:"67427627+ranyong1997@users.noreply.github.com",commits:1}]}}},9570:(e,a,s)=>{s.r(a),s.d(a,{default:()=>l});const n=(0,s(6252).uE)('<h1 id="在linux中持续运行node-js文件" tabindex="-1"><a class="header-anchor" href="#在linux中持续运行node-js文件" aria-hidden="true">#</a> 在linux中持续运行Node.js文件</h1><h2 id="为什么要持续运行" tabindex="-1"><a class="header-anchor" href="#为什么要持续运行" aria-hidden="true">#</a> 为什么要持续运行：</h2><blockquote><p>nodejs服务在关闭会话窗口后依然运行</p><p>我们在运行一个nodejs的http创建的服务器后，如果中断这个命令，或者关闭当前会话窗口，都会使得服务器停止运行，在浏览器中输入地址也没有意义了，我们也不能一直开着这个窗口，所以得需要一些其他的模块的帮助，来让nodejs开启的服务器后台运行或者关闭窗口后依然运行。</p></blockquote><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤：</h2><p>通过第三方模块pm2管理nodejs进程 需要先把它安装在全局：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i pm2 -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>进入项目文件夹， 我的文件名是app.js，所以：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 start node app.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>来启动服务器。</p><p>启动成功，这个时候服务器进入了后台进程中，关闭窗口或者执行其他命令都不会受影响，在浏览器输入ip:port可以看到服务器依然在运行。 可以通过pm2 list命令来查看有哪些nodejs的进程在运行，然后用<code>pm2 stop +App name</code>来停止这个进程。</p>',10),d={},l=(0,s(3744).Z)(d,[["render",function(e,a){return n}]])}}]);
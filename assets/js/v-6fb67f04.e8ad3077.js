"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[877],{2851:(l,e,i)=>{i.r(e),i.d(e,{data:()=>t});const t={key:"v-6fb67f04",path:"/Back-end/API%E6%B5%8B%E8%AF%95.html",title:"API测试",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"接口类型有哪些",slug:"接口类型有哪些",children:[]},{level:2,title:"手机短信验证码接口怎么测试",slug:"手机短信验证码接口怎么测试",children:[]},{level:2,title:"Post请求的body有常见的数据类型?",slug:"post请求的body有常见的数据类型",children:[]},{level:2,title:"常用HTTP协议调试代理工具有什么?详细说明抓取HTTPS协议的设置过程?",slug:"常用http协议调试代理工具有什么-详细说明抓取https协议的设置过程",children:[]},{level:2,title:"多个API的连续调用的测试用例的难点是什么？解决方法是什么？",slug:"多个api的连续调用的测试用例的难点是什么-解决方法是什么",children:[]}],filePathRelative:"Back-end/API测试.md",git:{updatedTime:null,contributors:[]}}},6035:(l,e,i)=>{i.r(e),i.d(e,{default:()=>b});var t=i(6252);const a=(0,t.uE)('<h1 id="api测试" tabindex="-1"><a class="header-anchor" href="#api测试" aria-hidden="true">#</a> API测试</h1><h2 id="接口类型有哪些" tabindex="-1"><a class="header-anchor" href="#接口类型有哪些" aria-hidden="true">#</a> 接口类型有哪些</h2><ul><li>get</li><li>post</li><li>delete</li><li>put</li></ul><h2 id="手机短信验证码接口怎么测试" tabindex="-1"><a class="header-anchor" href="#手机短信验证码接口怎么测试" aria-hidden="true">#</a> 手机短信验证码接口怎么测试</h2>',4),r=(0,t.Uk)("选择短信平台 "),d=(0,t.Uk)("寻找若干个短信平台，获取测试"),o={href:"https://so.csdn.net/so/search?q=%E6%8E%A5%E5%8F%A3&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},n=(0,t.Uk)("接口"),h=(0,t.Uk)("（注：有些平台是可以免费进行试用或者测试，有些平台是不能进行测试的，试用之前最好了解清楚。）如下图所以，就是某个短信平台的接口测试环境"),p=(0,t._)("li",null,"获取AppId和AppKey",-1),u=(0,t._)("li",null,"进行测试",-1),s=(0,t.uE)('<h2 id="post请求的body有常见的数据类型" tabindex="-1"><a class="header-anchor" href="#post请求的body有常见的数据类型" aria-hidden="true">#</a> Post请求的body有常见的数据类型?</h2><blockquote><ul><li>application/json</li><li>application/x-www-form-urlencoded</li><li>multipart/form-data</li><li>text/xml</li></ul></blockquote><h2 id="常用http协议调试代理工具有什么-详细说明抓取https协议的设置过程" tabindex="-1"><a class="header-anchor" href="#常用http协议调试代理工具有什么-详细说明抓取https协议的设置过程" aria-hidden="true">#</a> 常用HTTP协议调试代理工具有什么?详细说明抓取HTTPS协议的设置过程?</h2><blockquote><p>在win系统中用Fiddler代理</p><ul><li>安装fiddler证书</li><li>打开fiddlder，点击工具栏中Tools--&gt;Options</li><li>点击https设置选项，勾选选择项</li><li>点击Actions，点击第二项：Export Root Certificate to Desktop，这时候桌面上会出现证书FiddlerRoot文件，点击ok设置成功，关闭fiddler</li><li>在pc浏览器中，导入证书FiddlerRoot</li></ul><p>在mac系统中用Charles</p></blockquote><h2 id="多个api的连续调用的测试用例的难点是什么-解决方法是什么" tabindex="-1"><a class="header-anchor" href="#多个api的连续调用的测试用例的难点是什么-解决方法是什么" aria-hidden="true">#</a> 多个API的连续调用的测试用例的难点是什么？解决方法是什么？</h2><blockquote><p>难点：多个API的连续调用，并且后一个api的参数适用的是前一个api调用的返回结果，这就要求多个api调用之间可以方便地进行参数传递，举个例子：前一个api调用会返回一个有效的token，后一个api调用更需要用到带有这个token才能调用成功</p><p>解决方法：</p><ul><li>手工复制前一个api返回结果中的某个值，然后粘贴后一个api作为输入参数。</li><li>基于代码的api测试框架</li><li>借助于类似HttpRunner之类已有的api测试框架，可以通过关键字，很方便地将前一个api返回值中某个值传递给下一个api作为输入参数</li></ul></blockquote>',6),c={},b=(0,i(3744).Z)(c,[["render",function(l,e){const i=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[a,(0,t._)("blockquote",null,[(0,t._)("ul",null,[(0,t._)("li",null,[r,(0,t._)("ul",null,[(0,t._)("li",null,[d,(0,t._)("a",o,[n,(0,t.Wm)(i)]),h])])]),p,u])]),s],64)}]])}}]);